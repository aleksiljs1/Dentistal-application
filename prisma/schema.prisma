generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id             Int       @id @default(autoincrement())
  email          String    @unique
  password       String
  firstName      String
  lastName       String
  role           UserRole  @default(STAFF)
  createdAt      DateTime  @default(now())
  updatedAt      DateTime  @updatedAt
  appointments   Appointment[] @relation("StaffAppointments")
  appointmentHistories AppointmentHistory[] @relation("UserAppointmentHistories")
}

model Patient {
  id             Int       @id @default(autoincrement())
  firstName      String
  lastName       String
  email          String    @unique
  phone          String?
  appointments   Appointment[]
  medicalHistory MedicalHistory[]
  createdAt      DateTime  @default(now())
  updatedAt      DateTime  @updatedAt
}

model Appointment {
  id             Int       @id @default(autoincrement())
  patientId      Int
  staffId        Int?
  date           DateTime
  status         AppointmentStatus @default(PENDING)
  description    String?
  problem        String    @db.Text
  notes          String?   @db.Text
  treatmentNotes String?   @db.Text
  followUpNeeded Boolean   @default(false)
  patient        Patient   @relation(fields: [patientId], references: [id])
  staff          User?     @relation("StaffAppointments", fields: [staffId], references: [id])
  history        AppointmentHistory[]
  treatments     Treatment[]
  createdAt      DateTime  @default(now())
  updatedAt      DateTime  @updatedAt
}

model AppointmentHistory {
  id             Int       @id @default(autoincrement())
  appointmentId  Int
  changedById    Int?      // User who made the change
  action         String    // e.g., "status update", "treatment added", etc.
  details        String?   // Description of what was changed or done
  createdAt      DateTime  @default(now())
  appointment    Appointment @relation(fields: [appointmentId], references: [id])
  changedBy      User?     @relation("UserAppointmentHistories", fields: [changedById], references: [id])
}

model Treatment {
  id             Int       @id @default(autoincrement())
  appointmentId  Int
  toothNumber    String?   // e.g., "18", "4", etc.
  name           String
  description    String    @db.Text
  cost           Decimal   @db.Decimal(10, 2)
  appointment    Appointment @relation(fields: [appointmentId], references: [id])
  createdAt      DateTime  @default(now())
  updatedAt      DateTime  @updatedAt
}

model MedicalHistory {
  id             Int       @id @default(autoincrement())
  patientId      Int
  date           DateTime
  diagnosis      String
  treatment      String
  notes          String?   @db.Text
  patient        Patient   @relation(fields: [patientId], references: [id])
  createdAt      DateTime  @default(now())
  updatedAt      DateTime  @updatedAt
}

enum UserRole {
  ADMIN
  STAFF
  DENTIST
}

enum AppointmentStatus {
  PENDING
  CONFIRMED
  COMPLETED
  CANCELLED
  RESCHEDULED
} 